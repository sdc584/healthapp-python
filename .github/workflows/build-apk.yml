name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build APK with Docker
      run: |
        # 创建一个简单的Dockerfile
        cat > Dockerfile << 'EOF'
        FROM ubuntu:20.04
        
        ENV DEBIAN_FRONTEND=noninteractive
        ENV PYTHONUNBUFFERED=1
        
        # 安装基础依赖
        RUN apt-get update && apt-get install -y \
            python3 \
            python3-pip \
            python3-dev \
            build-essential \
            git \
            zip \
            unzip \
            openjdk-8-jdk \
            wget \
            curl \
            autoconf \
            automake \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libtinfo5 \
            cmake \
            libffi-dev \
            libssl-dev \
            && rm -rf /var/lib/apt/lists/*
        
        # 设置Java环境
        ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        
        # 安装Python依赖
        RUN pip3 install --upgrade pip
        RUN pip3 install buildozer cython
        
        # 设置工作目录
        WORKDIR /app
        
        # 复制应用文件
        COPY . .
        
        # 构建APK
        RUN buildozer android debug
        EOF
        
        # 构建Docker镜像并运行
        docker build -t healthapp-builder .
        docker run --rm -v $PWD/bin:/app/bin healthapp-builder cp -r bin /app/ || true
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: healthapp-apk
        path: bin/*.apk